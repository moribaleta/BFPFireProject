var features = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]

// Parameters:
var lChilds = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, -1, 21, -1, -1, 24, -1, -1, 27, -1, -1, 30, -1, -1, 33, -1, -1, 36, -1, -1, 39, -1, -1, 42, -1, -1, 45, 46, -1, -1, -1, 50, 51, -1, -1, -1, -1, -1, 57, 58, 59, 60, 61, 62, 63, 64, 65, -1, 67, -1, -1, 70, -1, 72, -1, -1, 75, -1, -1, 78, 79, -1, -1, -1, 83, 84, 85, 86, -1, -1, -1, -1, -1, 92, -1, -1, 95, -1, -1, 98, -1, -1, 101, -1, -1, 104, 105, 106, -1, -1, -1, 110, -1, -1, 113, 114, 115, 116, 117, 118, -1, 120, -1, -1, -1, 124, -1, -1, -1, -1, -1, 130, -1, -1, 133, 134, 135, 136, 137, 138, 139, 140, -1, 142, -1, 144, -1, -1, 147, -1, -1, 150, -1, -1, 153, -1, -1, 156, -1, -1, 159, -1, -1, 162, -1, -1, 165, 166, -1, -1, -1, -1, -1];
var rChilds = [170, 169, 132, 129, 112, 103, 56, 55, 54, 49, 44, 41, 38, 35, 32, 29, 26, 23, 20, -1, 22, -1, -1, 25, -1, -1, 28, -1, -1, 31, -1, -1, 34, -1, -1, 37, -1, -1, 40, -1, -1, 43, -1, -1, 48, 47, -1, -1, -1, 53, 52, -1, -1, -1, -1, -1, 100, 97, 94, 91, 82, 77, 74, 69, 66, -1, 68, -1, -1, 71, -1, 73, -1, -1, 76, -1, -1, 81, 80, -1, -1, -1, 90, 89, 88, 87, -1, -1, -1, -1, -1, 93, -1, -1, 96, -1, -1, 99, -1, -1, 102, -1, -1, 109, 108, 107, -1, -1, -1, 111, -1, -1, 128, 127, 126, 123, 122, 119, -1, 121, -1, -1, -1, 125, -1, -1, -1, -1, -1, 131, -1, -1, 164, 161, 158, 155, 152, 149, 146, 141, -1, 143, -1, 145, -1, -1, 148, -1, -1, 151, -1, -1, 154, -1, -1, 157, -1, -1, 160, -1, -1, 163, -1, -1, 168, 167, -1, -1, -1, -1, -1];
var thresholds = [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -2.0, 0.5, -2.0, -2.0, 0.5, -2.0, -2.0, 0.5, -2.0, -2.0, 0.5, -2.0, -2.0, 0.5, -2.0, -2.0, 0.5, -2.0, -2.0, 0.5, -2.0, -2.0, 0.5, -2.0, -2.0, 0.5, 0.5, -2.0, -2.0, -2.0, 0.5, 0.5, -2.0, -2.0, -2.0, -2.0, -2.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -2.0, 0.5, -2.0, -2.0, 0.5, -2.0, 0.5, -2.0, -2.0, 0.5, -2.0, -2.0, 0.5, 0.5, -2.0, -2.0, -2.0, 0.5, 0.5, 0.5, 0.5, -2.0, -2.0, -2.0, -2.0, -2.0, 0.5, -2.0, -2.0, 0.5, -2.0, -2.0, 0.5, -2.0, -2.0, 0.5, -2.0, -2.0, 0.5, 0.5, 0.5, -2.0, -2.0, -2.0, 0.5, -2.0, -2.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -2.0, 0.5, -2.0, -2.0, -2.0, 0.5, -2.0, -2.0, -2.0, -2.0, -2.0, 0.5, -2.0, -2.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -2.0, 0.5, -2.0, 0.5, -2.0, -2.0, 0.5, -2.0, -2.0, 0.5, -2.0, -2.0, 0.5, -2.0, -2.0, 0.5, -2.0, -2.0, 0.5, -2.0, -2.0, 0.5, -2.0, -2.0, 0.5, 0.5, -2.0, -2.0, -2.0, -2.0, -2.0];
var indices = [122, 104, 108, 110, 112, 94, 88, 119, 11, 111, 34, 77, 20, 54, 85, 56, 107, 3, 21, -2, 8, -2, -2, 70, -2, -2, 59, -2, -2, 46, -2, -2, 67, -2, -2, 17, -2, -2, 66, -2, -2, 63, -2, -2, 106, 74, -2, -2, -2, 60, 90, -2, -2, -2, -2, -2, 82, 41, 64, 29, 111, 3, 50, 83, 70, -2, 81, -2, -2, 14, -2, 7, -2, -2, 5, -2, -2, 15, 69, -2, -2, -2, 58, 14, 0, 1, -2, -2, -2, -2, -2, 63, -2, -2, 12, -2, -2, 6, -2, -2, 22, -2, -2, 12, 2, 55, -2, -2, -2, 56, -2, -2, 66, 4, 62, 3, 59, 52, -2, 74, -2, -2, -2, 36, -2, -2, -2, -2, -2, 0, -2, -2, 90, 77, 33, 20, 76, 55, 39, 19, -2, 89, -2, 16, -2, -2, 4, -2, -2, 43, -2, -2, 8, -2, -2, 79, -2, -2, 72, -2, -2, 50, -2, -2, 43, 16, -2, -2, -2, -2, -2];
var classes = [
    [359, 327, 336, 355],
    [359, 327, 0, 355],
    [359, 327, 0, 23],
    [352, 69, 0, 16],
    [351, 69, 0, 6],
    [337, 51, 0, 6],
    [329, 40, 0, 6],
    [240, 11, 0, 6],
    [240, 9, 0, 6],
    [240, 7, 0, 6],
    [238, 5, 0, 5],
    [233, 5, 0, 3],
    [232, 4, 0, 3],
    [229, 3, 0, 3],
    [225, 2, 0, 3],
    [220, 2, 0, 2],
    [214, 2, 0, 1],
    [208, 1, 0, 1],
    [201, 1, 0, 0],
    [191, 0, 0, 0],
    [10, 1, 0, 0],
    [10, 0, 0, 0],
    [0, 1, 0, 0],
    [7, 0, 0, 1],
    [7, 0, 0, 0],
    [0, 0, 0, 1],
    [6, 1, 0, 0],
    [6, 0, 0, 0],
    [0, 1, 0, 0],
    [6, 0, 0, 1],
    [6, 0, 0, 0],
    [0, 0, 0, 1],
    [5, 0, 0, 1],
    [5, 0, 0, 0],
    [0, 0, 0, 1],
    [4, 1, 0, 0],
    [4, 0, 0, 0],
    [0, 1, 0, 0],
    [3, 1, 0, 0],
    [3, 0, 0, 0],
    [0, 1, 0, 0],
    [1, 1, 0, 0],
    [1, 0, 0, 0],
    [0, 1, 0, 0],
    [5, 0, 0, 2],
    [1, 0, 0, 2],
    [0, 0, 0, 2],
    [1, 0, 0, 0],
    [4, 0, 0, 0],
    [2, 2, 0, 1],
    [2, 0, 0, 1],
    [2, 0, 0, 0],
    [0, 0, 0, 1],
    [0, 2, 0, 0],
    [0, 2, 0, 0],
    [0, 2, 0, 0],
    [89, 29, 0, 0],
    [88, 23, 0, 0],
    [86, 18, 0, 0],
    [85, 14, 0, 0],
    [84, 12, 0, 0],
    [76, 7, 0, 0],
    [73, 4, 0, 0],
    [72, 3, 0, 0],
    [66, 1, 0, 0],
    [63, 0, 0, 0],
    [3, 1, 0, 0],
    [3, 0, 0, 0],
    [0, 1, 0, 0],
    [6, 2, 0, 0],
    [5, 0, 0, 0],
    [1, 2, 0, 0],
    [0, 2, 0, 0],
    [1, 0, 0, 0],
    [1, 1, 0, 0],
    [0, 1, 0, 0],
    [1, 0, 0, 0],
    [3, 3, 0, 0],
    [1, 3, 0, 0],
    [0, 3, 0, 0],
    [1, 0, 0, 0],
    [2, 0, 0, 0],
    [8, 5, 0, 0],
    [8, 3, 0, 0],
    [3, 3, 0, 0],
    [1, 3, 0, 0],
    [0, 3, 0, 0],
    [1, 0, 0, 0],
    [2, 0, 0, 0],
    [5, 0, 0, 0],
    [0, 2, 0, 0],
    [1, 2, 0, 0],
    [1, 0, 0, 0],
    [0, 2, 0, 0],
    [1, 4, 0, 0],
    [0, 4, 0, 0],
    [1, 0, 0, 0],
    [2, 5, 0, 0],
    [2, 0, 0, 0],
    [0, 5, 0, 0],
    [1, 6, 0, 0],
    [0, 6, 0, 0],
    [1, 0, 0, 0],
    [8, 11, 0, 0],
    [7, 3, 0, 0],
    [7, 1, 0, 0],
    [7, 0, 0, 0],
    [0, 1, 0, 0],
    [0, 2, 0, 0],
    [1, 8, 0, 0],
    [0, 8, 0, 0],
    [1, 0, 0, 0],
    [14, 18, 0, 0],
    [14, 10, 0, 0],
    [14, 6, 0, 0],
    [14, 4, 0, 0],
    [13, 2, 0, 0],
    [13, 1, 0, 0],
    [12, 0, 0, 0],
    [1, 1, 0, 0],
    [1, 0, 0, 0],
    [0, 1, 0, 0],
    [0, 1, 0, 0],
    [1, 2, 0, 0],
    [0, 2, 0, 0],
    [1, 0, 0, 0],
    [0, 2, 0, 0],
    [0, 4, 0, 0],
    [0, 8, 0, 0],
    [1, 0, 0, 10],
    [0, 0, 0, 10],
    [1, 0, 0, 0],
    [7, 258, 0, 7],
    [4, 252, 0, 4],
    [4, 245, 0, 2],
    [4, 243, 0, 1],
    [3, 239, 0, 1],
    [2, 234, 0, 1],
    [1, 223, 0, 1],
    [1, 211, 0, 0],
    [0, 199, 0, 0],
    [1, 12, 0, 0],
    [0, 11, 0, 0],
    [1, 1, 0, 0],
    [0, 1, 0, 0],
    [1, 0, 0, 0],
    [0, 12, 0, 1],
    [0, 12, 0, 0],
    [0, 0, 0, 1],
    [1, 11, 0, 0],
    [0, 11, 0, 0],
    [1, 0, 0, 0],
    [1, 5, 0, 0],
    [0, 5, 0, 0],
    [1, 0, 0, 0],
    [1, 4, 0, 0],
    [0, 4, 0, 0],
    [1, 0, 0, 0],
    [0, 2, 0, 1],
    [0, 2, 0, 0],
    [0, 0, 0, 1],
    [0, 7, 0, 2],
    [0, 7, 0, 0],
    [0, 0, 0, 2],
    [3, 6, 0, 3],
    [3, 6, 0, 0],
    [0, 6, 0, 0],
    [3, 0, 0, 0],
    [0, 0, 0, 3],
    [0, 0, 0, 332],
    [0, 0, 336, 0]
];

// Prediction:

var DecisionTreeClassifier = function (lChilds, rChilds, thresholds, indices, classes) {

    this.lChilds = lChilds;
    this.rChilds = rChilds;
    this.thresholds = thresholds;
    this.indices = indices;
    this.classes = classes;

    var findMax = function (nums) {
        var index = 0;
        for (var i = 0; i < nums.length; i++) {
            index = nums[i] > nums[index] ? i : index;
        }
        return index;
    };

    this.predict = function (features, node) {
        node = (typeof node !== 'undefined') ? node : 0;
        if (this.thresholds[node] != -2) {
            if (features[this.indices[node]] <= this.thresholds[node]) {
                return this.predict(features, this.lChilds[node]);
            } else {
                return this.predict(features, this.rChilds[node]);
            }
        }
        return findMax(this.classes[node]);
    };

};

console.log("features %o",features)

var clf = new DecisionTreeClassifier(lChilds, rChilds, thresholds, indices, classes);

function validateForm(x_input) {
    if (x_input.length > 0) {
        let features = x_input.split(",").map(Number);
        var prediction = clf.predict(features);
        /* console.log(prediction);
        if (prediction == 0) {
            console.log(prediction + ' Prediction is 1');
            document.write("Prediction is 1st Alert");
        }
        if (prediction == 1) {
            console.log(prediction + ' Prediction is 2');
            document.write("Prediction is 2nd Alert");
        }
        if (prediction == 2) {
            console.log(prediction + ' Prediction is 3');
            document.write("Prediction is 3rd Alert");
        }
        if (prediction == 3) {
            console.log(prediction + ' Prediction is 4');
            document.write("Prediction is Otherlow");
        } */
        return {
            prediction,
            features
        }
    }
    return null;
}